{"version":3,"sources":["messages.js"],"names":["mongoose","require","Message","env","MONGO_URI","connectToDatabase","regeneratorRuntime","async","_context","prev","next","process","abrupt","connections","connect","useNewUrlParser","useUnifiedTopology","stop","module","exports","req","method","find","messages","res","status","json","console","error","_context2","t0"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,QAAUD,QAAQ,cAAlBC,UAAUD,QAAQE,IAAAC,UAMlBC,kBAAoB,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAHpBN,SAAYO,YAAYP,GAAAA,WAGJ,OAAAI,EAAAI,OAAA,SAEXZ,SAASa,YAAY,IAFVL,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAF,EAAAI,OAAA,SAAAZ,SAAAc,QAAAV,UAAA,CAAAW,iBAAA,EAAAC,oBAAA,KAAA,KAAA,EAAA,IAAA,MAAA,OAAAR,EAAAS,WAAAC,OAAAC,QAClBnB,SAASa,EAAAA,GAATb,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,GADkB,QAAAoB,EAAAC,OAClBrB,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MADkBK,qBAClBL,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAW2BE,QAAQoB,QAXnCtB,KAAAA,EAWUuB,EAXVvB,EAAAA,KADkBwB,EAAAC,OAAA,KAAAC,KAAAH,GAClBvB,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GADkB2B,QAAAC,MAAA,2BAAAC,EAAAC,IAAAN,EAAAC,OAAA,KAAAC,KAAA,CAAAE,MAAA,6BAClB5B,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAG+BwB,EAJbC,OAAA,KAAAC,KAAA,CAAAE,MAAA,uBAClB5B,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA","file":"messages.min.js","sourcesContent":["const mongoose = require('mongoose');\r\nconst Message = require('../message');  // Assuming you have the 'message' model\r\n\r\n// MongoDB URI should come from your environment variable (ensure you have it set)\r\nconst MONGO_URI = process.env.MONGO_URI;\r\n\r\n// Connect to MongoDB (with retry logic if necessary)\r\nconst connectToDatabase = async () => {\r\n    if (mongoose.connections[0].readyState) {\r\n        return mongoose.connections[0];  // Reuse existing connection if available\r\n    }\r\n    return mongoose.connect(MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\n};\r\n\r\n// Handle GET requests to fetch messages from the database\r\nmodule.exports = async (req, res) => {\r\n    if (req.method === 'GET') {\r\n        try {\r\n            await connectToDatabase();  // Ensure the connection is established\r\n            const messages = await Message.find();  // Fetch all messages\r\n            res.status(200).json(messages);  // Send response as JSON\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n            res.status(500).json({ error: 'Failed to fetch messages' });\r\n        }\r\n    } else {\r\n        res.status(405).json({ error: 'Method not allowed' });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n"]}