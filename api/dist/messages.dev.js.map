{"version":3,"sources":["messages.js"],"names":["mongoose","require","Message","MONGO_URI","process","env","connectToDatabase","connections","readyState","connect","useNewUrlParser","useUnifiedTopology","module","exports","req","res","method","find","messages","status","json","console","error"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAvB,C,CAAwC;AAExC;;;AACA,IAAME,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYF,SAA9B,C,CAEA;;AACA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,eAClBN,QAAQ,CAACO,WAAT,CAAqB,CAArB,EAAwBC,UADN;AAAA;AAAA;AAAA;;AAAA,2CAEXR,QAAQ,CAACO,WAAT,CAAqB,CAArB,CAFW;;AAAA;AAAA,2CAIfP,QAAQ,CAACS,OAAT,CAAiBN,SAAjB,EAA4B;AAAEO,YAAAA,eAAe,EAAE,IAAnB;AAAyBC,YAAAA,kBAAkB,EAAE;AAA7C,WAA5B,CAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B,C,CAOA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACTD,GAAG,CAACE,MAAJ,KAAe,KADN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAGCV,iBAAiB,EAHlB;;AAAA;AAAA;AAAA,0CAIkBJ,OAAO,CAACe,IAAR,EAJlB;;AAAA;AAICC,UAAAA,QAJD;AAImC;AACxCH,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB,EALK,CAK4B;;AAL5B;AAAA;;AAAA;AAAA;AAAA;AAOLG,UAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACAP,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;;AARK;AAAA;AAAA;;AAAA;AAWTP,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["const mongoose = require('mongoose');\r\nconst Message = require('../message');  // Assuming you have the 'message' model\r\n\r\n// MongoDB URI should come from your environment variable (ensure you have it set)\r\nconst MONGO_URI = process.env.MONGO_URI;\r\n\r\n// Connect to MongoDB (with retry logic if necessary)\r\nconst connectToDatabase = async () => {\r\n    if (mongoose.connections[0].readyState) {\r\n        return mongoose.connections[0];  // Reuse existing connection if available\r\n    }\r\n    return mongoose.connect(MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\n};\r\n\r\n// Handle GET requests to fetch messages from the database\r\nmodule.exports = async (req, res) => {\r\n    if (req.method === 'GET') {\r\n        try {\r\n            await connectToDatabase();  // Ensure the connection is established\r\n            const messages = await Message.find();  // Fetch all messages\r\n            res.status(200).json(messages);  // Send response as JSON\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n            res.status(500).json({ error: 'Failed to fetch messages' });\r\n        }\r\n    } else {\r\n        res.status(405).json({ error: 'Method not allowed' });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n"],"file":"messages.dev.js"}